CREATE TABLE Author (
    author_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

CREATE TABLE Genre (
    genre_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

CREATE TABLE Book (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author_id INT,
    genre_id INT,
    isbn VARCHAR(20),
    publication_year INT,
    FOREIGN KEY (genre_id) REFERENCES Genre(genre_id)
);

CREATE TABLE Version (
    version_id SERIAL PRIMARY KEY,
    book_id INT NOT NULL,
    edition_number INT,
    publication_date DATE,
    format VARCHAR(50),
    FOREIGN KEY (book_id) REFERENCES Book(book_id)
);

CREATE TABLE Book_Author (
    book_id INT,
    author_id INT,
    PRIMARY KEY (book_id, author_id),
    FOREIGN KEY (book_id) REFERENCES Book(book_id),
    FOREIGN KEY (author_id) REFERENCES Author(author_id)
);

/*CREATE TABLE Role (
  role_id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(20) NOT NULL
);

CREATE TABLE Users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    role_id INT,
    FOREIGN KEY (role_id) REFERENCES Role(role_id)
);*/

create table users (
       user_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
       username varchar(255) not null,
       password varchar(255) not null,
       name varchar(255) not null,
       email varchar(255) not null,
       enabled boolean not null,
       last_password_reset_date timestamp
);

CREATE UNIQUE INDEX username ON users(username);
CREATE UNIQUE INDEX email ON users(email);

create table roles (
   role_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   name varchar(255) not null
);

CREATE UNIQUE INDEX name ON roles(name);

create table user_role (
                           user_id bigint REFERENCES users(user_id),
                           role_id bigint REFERENCES roles(role_id)
);

CREATE TABLE Review (
    review_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    book_id INT,
    rating INT,
    comment TEXT,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (book_id) REFERENCES Book(book_id)
);

CREATE TABLE Summary (
    summary_id INT AUTO_INCREMENT PRIMARY KEY,
    book_id INT,
    content TEXT,
    FOREIGN KEY (book_id) REFERENCES Book(book_id)
);